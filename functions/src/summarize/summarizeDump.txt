function extractKeywords(text: string) {
  // If the text is empty, return an empty array
  if (text === '') {
    return [];
  }
  // If the text is a single word, return an array with that word
  if (text.split(' ').length === 1) {
    return [text];
  }
  // If there are multiple words, use compromise to extract the keywords
  const doc = nlp(text);
  // print classified terms
  console.log(doc.terms().data());

  // Try to extract the most important keywords
  const keywords2 = doc
    .terms()
    .data()
    .filter((item: any) => item.tags.includes('Noun'))
    .map((item: any) => item.text);

  const keywords = doc.topics().out('array');
  if (keywords.length > 0) return keywords;

  // If keywords is empty, return the nouns
  const nouns = doc.nouns().out('array');
  if (nouns.length > 0) return nouns;

  // If nouns is empty, return the verbs
  const verbs = doc.verbs().out('array');
  if (verbs.length > 0) return verbs;

  // If verbs is empty, return the adjectives
  const adjectives = doc.adjectives().out('array');
  if (adjectives.length > 0) return adjectives;

  // If adjectives is empty, return the adverbs
  const adverbs = doc.adverbs().out('array');
  if (adverbs.length > 0) return adverbs;

  // If adverbs is empty, return the text split by spaces
  return text.split(' ');
}